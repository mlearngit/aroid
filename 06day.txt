构造代码块
作用：给对象进行初始化。
对象一建立就运行，而且优先于构造函数执行。
和构造函数的区别：
构造代码块是给所有对象进行统一初始化，而构造函数是给对应的对象初始化。
构造代码块中定义的是不同对象共性的初始化内容。


静态代码块
格式：
static{
  静态代码块中的执行语句
}
特点：随着类的加载而执行，只执行一次
用于给类进行初始化的。


对象的初始化过程
 Person p=new Person("zhangsan",20);
 这句话都做了什么事情？
 1.因为new用到了Person.class，所以会先找到Person.class文件并加载到内存
 2.执行该类中的static代码块，如果有的话，给Person.class类进行初始化
 3.在堆内存中开辟空间，分配内存地址
 4.在堆内存中建立对象的特有属性，并进行黑夜初始化。
 5.对属性进行显示初始化
 6.对对象进行构造代码块初始化
 7.对对象进行对应的构造函数初始化
 8.将内存地址赋给栈内存中的p变量。
 
 
 单例设计
 设计模式：解决某一类问题最行之有效的方法
 java中23咱设计模式
 单例设计模式：解决一个类在内存只存在一个对象
 
 想要保证对象唯一：
 1.为了避免其它程序过多建立该类对象，先禁止其它程序建立该类对象
 2.还为让其它程序可以访问到该类对象，只好在本类中自定义一个对象。
 3.为了方便其它程序对自定义对象的访问，可以对外提供一些访问方式
 
 这三部怎么用代码体现呢？
 1.将构造函数私有化
 2.在类中创建一个本类对象
 3.提供一个方法可以获取到该对象
 
 例：
 饿汉式
 class Single{
 private static Single s=new Single();
 private Single1(){}
 public static Single getInstance(){
     return s;
 }
}


懒汉式
class Single{
	private static Single s=null;
	private Single(){}
	public static Single getInstance(){
		if(s==null){
		    synchronized(Single.class){
				if(s==null){
					s=new Single();
				}
			}
		}
	    return s;
	}
}
 